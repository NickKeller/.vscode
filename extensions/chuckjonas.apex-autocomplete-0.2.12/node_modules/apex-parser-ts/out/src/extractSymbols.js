'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const antlr4ts_1 = require("antlr4ts");
const tree_1 = require("antlr4ts/tree");
const ApexcodeLexer_1 = require("./grammar/ApexcodeLexer");
const ApexcodeParser_1 = require("./grammar/ApexcodeParser");
const symbolReader_1 = require("./symbolReader");
const fs = require("fs");
class ExtractSymbols {
    findSymbolsFromFile(file) {
        return new Promise((resolve, reject) => {
            fs.readFile(file, (err, data) => {
                if (!err) {
                    resolve(this.findSymbolsFromString(data.toString()));
                }
                else {
                    console.log(err);
                    reject(err);
                }
            });
        });
    }
    findSymbolsFromString(data) {
        let inputStream = new antlr4ts_1.ANTLRInputStream(data);
        let lexer = new ApexcodeLexer_1.ApexcodeLexer(inputStream);
        let tokenStream = new antlr4ts_1.CommonTokenStream(lexer);
        let parser = new ApexcodeParser_1.ApexcodeParser(tokenStream);
        parser.buildParseTree = true;
        var tree = parser.compilationUnit();
        let symbolListener = new symbolReader_1.SymbolReader(parser);
        tree_1.ParseTreeWalker.DEFAULT.walk(symbolListener, tree);
        return symbolListener;
    }
}
exports.ExtractSymbols = ExtractSymbols;
//# sourceMappingURL=extractSymbols.js.map